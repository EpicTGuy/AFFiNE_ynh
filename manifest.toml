#:schema https://raw.githubusercontent.com/YunoHost/apps/main/schemas/manifest.v2.schema.json

packaging_format = 2

id = "affine"
name = "AFFiNE"
description.en = "A next-generation collaborative knowledge base and whiteboard for flexible project management."
description.fr = "Une base de connaissances collaborative de nouvelle génération et un tableau blanc pour une gestion de projet flexible."

version = "0.10.0~ynh1"

maintainers = ["EpicTGuy <epic.tguy@example.com>"]

[upstream]
# NB: Only the "license" key is mandatory. Remove entries for which there's no relevant data
license = "MIT"
website = "https://affine.pro"
demo = "https://demo.affine.pro"
admindoc = "https://docs.affine.pro/admin"
userdoc = "https://docs.affine.pro/user"
code = "https://github.com/toeverything/AFFiNE"
# FIXME: optional but recommended if relevant, this is meant to contain the Common Platform Enumeration, which is
# sort of a standard id for applications defined by the NIST. In particular, YunoHost may use this is in the future
# to easily track CVE (=security reports) related to apps. The CPE may be obtained by searching here:
# https://nvd.nist.gov/products/cpe/search.
# For example, for Nextcloud, the CPE is 'cpe:2.3:a:nextcloud:nextcloud' (no need to include the version number)
cpe = "cpe:2.3:a:toeverything:affine"

fund = "https://opencollective.com/affine"

[integration]
yunohost = ">= 4.3.0"
helpers_version = "2.1"
architectures = ["amd64", "arm64"]
multi_instance = true
ldap = true
sso = true
disk = "3G"
ram.build = "2G"
ram.runtime = "512M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/affine"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

    [install.is_public]
    ask.en = "Make the application public?"
    ask.fr = "Rendre l'application publique ?"
    help.en = "If enabled, the application will be accessible without authentication."
    help.fr = "Si activé, l'application sera accessible sans authentification."
    type = "boolean"
    default = false


[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

    [resources.sources.main]
    url = "https://github.com/toeverything/AFFiNE/releases/download/v0.10.0/affine-v0.10.0-linux-x64.tar.gz"
    sha256 = "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456"
    autoupdate.strategy = "latest_github_release"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    [resources.apt]
    packages = "postgresql, redis-server"

    [resources.database]
    type = "postgresql"

    [resources.redis]
    # This will automatically provision/deprovision a Redis DB and store the corresponding credentials in settings $redis_db, $redis_pwd
