#!/bin/bash

# Script d'installation pour AFFiNE
# Bas√© sur le manifest.toml v2 et les helpers YunoHost v2.1

set -e

# Chargement des helpers YunoHost
source /usr/share/yunohost/helpers

# Variables de configuration
APP_ID="affine"
APP_NAME="AFFiNE"
APP_VERSION="0.10.0~ynh1"

# R√©cup√©ration de l'instance depuis les param√®tres YunoHost
INSTANCE_ID=$(ynh_app_setting_get "$APP_ID" "instance_id")
if [ -z "$INSTANCE_ID" ]; then
    INSTANCE_ID=$(ynh_string_random 8)
    ynh_app_setting_set "$APP_ID" "instance_id" "$INSTANCE_ID"
fi

# Configuration multi-instance
APP_USER="${APP_ID}_${INSTANCE_ID}"
APP_GROUP="${APP_ID}_${INSTANCE_ID}"
APP_DIR="/var/www/${APP_ID}_${INSTANCE_ID}"
APP_DATA_DIR="$APP_DIR/data"
APP_CONFIG_DIR="$APP_DIR/config"
APP_LOG_DIR="/var/log/${APP_ID}_${INSTANCE_ID}"
APP_SOURCE_DIR="$APP_DIR/source"
APP_WWW_DIR="$APP_DIR/app"

# Ports et services dynamiques
APP_PORT=$(ynh_find_port 3010)
DB_NAME="${APP_ID}_${INSTANCE_ID}"
REDIS_DB="$INSTANCE_ID"

# Fonction de nettoyage en cas d'erreur
cleanup_on_error() {
    ynh_clean_setup
    exit 1
}

# Gestion des erreurs
trap cleanup_on_error ERR

# 1) Gestion des erreurs et progression
ynh_abort_if_errors
ynh_script_progression "Installation d'AFFiNE..." 0 100

# 2) R√©cup√©ration des param√®tres d'installation
ynh_script_progression "R√©cup√©ration des param√®tres..." 5 100

DOMAIN=$(ynh_app_setting_get "$APP_ID" "domain")
PATH_URL=$(ynh_app_setting_get "$APP_ID" "path")
IS_PUBLIC=$(ynh_app_setting_get "$APP_ID" "is_public")

# Validation des param√®tres
if [ -z "$DOMAIN" ]; then
    ynh_log_error "Le domaine n'est pas d√©fini"
    exit 1
fi

if [ -z "$PATH_URL" ]; then
    PATH_URL="/affine"
fi

if [ -z "$IS_PUBLIC" ]; then
    IS_PUBLIC="false"
fi

# Enregistrement des param√®tres
ynh_app_setting_set "$APP_ID" "domain" "$DOMAIN"
ynh_app_setting_set "$APP_ID" "path" "$PATH_URL"
ynh_app_setting_set "$APP_ID" "is_public" "$IS_PUBLIC"

ynh_log_info "Param√®tres r√©cup√©r√©s : domain=$DOMAIN, path=$PATH_URL, is_public=$IS_PUBLIC"

# 3) Cr√©ation de l'utilisateur syst√®me et des dossiers persistants
ynh_script_progression "Cr√©ation de l'utilisateur syst√®me..." 10 100

# Cr√©ation de l'utilisateur syst√®me
ynh_system_user_create "$APP_USER" "$APP_GROUP"

# Cr√©ation des dossiers persistants selon resources.*
ynh_exec_as "$APP_USER" mkdir -p "$APP_DATA_DIR"
ynh_exec_as "$APP_USER" mkdir -p "$APP_CONFIG_DIR"
ynh_exec_as "$APP_USER" mkdir -p "$APP_SOURCE_DIR"
ynh_exec_as "$APP_USER" mkdir -p "$APP_WWW_DIR"
ynh_exec_as "$APP_USER" mkdir -p "$APP_LOG_DIR"

# Configuration des permissions
chown -R "$APP_USER:$APP_GROUP" "$APP_DIR"
chmod -R 750 "$APP_DIR"
chmod -R 750 "$APP_LOG_DIR"

ynh_log_info "Utilisateur syst√®me et dossiers cr√©√©s"

# 4) Installation de Node.js LTS
ynh_script_progression "Installation de Node.js LTS..." 15 100

ynh_nodejs_install --package "$APP_ID" --nodejs_version "lts"

# Installation de PNPM (gestionnaire de paquets AFFiNE)
npm install -g pnpm
ynh_log_info "PNPM install√©"

# V√©rification de l'installation
NODE_VERSION=$(node --version)
ynh_log_info "Node.js install√© : $NODE_VERSION"

# 5) T√©l√©chargement et extraction des sources
ynh_script_progression "T√©l√©chargement des sources..." 25 100

# R√©cup√©ration des informations de source depuis le manifest
SOURCE_URL="https://github.com/toeverything/AFFiNE/releases/download/v0.10.0/affine-v0.10.0-linux-x64.tar.gz"
SOURCE_CHECKSUM="a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456"

# T√©l√©chargement et extraction
ynh_setup_source "$APP_SOURCE_DIR" "$SOURCE_URL" "$SOURCE_CHECKSUM"

ynh_log_info "Sources t√©l√©charg√©es et extraites"

# 6) Installation des d√©pendances Node et build de production
ynh_script_progression "Installation des d√©pendances Node..." 35 100

cd "$APP_SOURCE_DIR"

# Installation de PNPM si n√©cessaire
if ! command -v pnpm &> /dev/null; then
    ynh_exec_as "$APP_USER" npm install -g pnpm
fi

# Installation des d√©pendances
ynh_exec_as "$APP_USER" pnpm install --frozen-lockfile

ynh_script_progression "Build de production..." 50 100

# Build de production selon BUILDING.md upstream
ynh_exec_as "$APP_USER" pnpm build

ynh_log_info "D√©pendances install√©es et build termin√©"

# 7) D√©ploiement des artefacts dans /var/www/__APP__
ynh_script_progression "D√©ploiement des artefacts..." 60 100

# Copie des artefacts build√©s
ynh_exec_as "$APP_USER" cp -r dist/* "$APP_WWW_DIR"

# Configuration des permissions s√ªres
chown -R "$APP_USER:$APP_GROUP" "$APP_WWW_DIR"
chmod -R 750 "$APP_WWW_DIR"

ynh_log_info "Artefacts d√©ploy√©s dans $APP_WWW_DIR"

# 8) G√©n√©ration du fichier de configuration
ynh_script_progression "G√©n√©ration de la configuration..." 70 100

# Configuration de la base de donn√©es PostgreSQL
ynh_postgresql_create_db "$DB_NAME" "$APP_USER"
DB_PASSWORD=$(ynh_string_random 32)
ynh_postgresql_execute_as_root "CREATE USER $APP_USER WITH PASSWORD '$DB_PASSWORD';"
ynh_postgresql_execute_as_root "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $APP_USER;"

# Configuration de Redis
ynh_redis_create_db "$REDIS_DB" "$APP_USER"

# G√©n√©ration du fichier de configuration
cat > "$APP_CONFIG_DIR/config.json" << EOF
{
  "database": {
    "url": "postgresql://$APP_USER:$DB_PASSWORD@localhost:5432/$DB_NAME"
  },
  "redis": {
    "url": "redis://localhost:6379/$REDIS_DB"
  },
  "server": {
    "port": $APP_PORT,
    "host": "127.0.0.1"
  },
  "security": {
    "secret": "$(ynh_string_random 64)"
  },
  "storage": {
    "path": "$APP_DATA_DIR"
  },
  "logs": {
    "path": "$APP_LOG_DIR",
    "level": "info"
  },
  "app": {
    "name": "$APP_NAME",
    "version": "$APP_VERSION",
    "domain": "$DOMAIN",
    "path": "$PATH_URL",
    "is_public": $IS_PUBLIC
  }
}
EOF

# Configuration des permissions
chown "$APP_USER:$APP_GROUP" "$APP_CONFIG_DIR/config.json"
chmod 640 "$APP_CONFIG_DIR/config.json"

ynh_log_info "Configuration g√©n√©r√©e"

# 9) Configuration de SSOwat
ynh_script_progression "Configuration de SSOwat..." 75 100

# Configuration SSOwat pour l'authentification
ynh_add_ssowat_config "$APP_ID" "$DOMAIN" "$PATH_URL" "$IS_PUBLIC"

ynh_log_info "SSOwat configur√©"

# 10) Installation de NGINX
ynh_script_progression "Configuration de NGINX..." 80 100

# Configuration NGINX avec support root/subpath automatique
ynh_add_nginx_config "$APP_ID" "conf/nginx.conf"

# Configuration SSL
ynh_add_ssl_config "$APP_ID"

ynh_log_info "NGINX configur√©"

# 11) Installation du service systemd
ynh_script_progression "Configuration du service systemd..." 85 100

# Configuration du service systemd
ynh_add_systemd_config "$APP_ID" "$APP_USER" "$APP_GROUP" "$APP_WWW_DIR" "$APP_PORT"

# Configuration des variables d'environnement
ynh_add_config "$APP_ID" "NODE_ENV=production" "$APP_CONFIG_DIR"
ynh_add_config "$APP_ID" "PORT=$APP_PORT" "$APP_CONFIG_DIR"
ynh_add_config "$APP_ID" "HOST=127.0.0.1" "$APP_CONFIG_DIR"
ynh_add_config "$APP_ID" "CONFIG_PATH=$APP_CONFIG_DIR/config.json" "$APP_CONFIG_DIR"

ynh_log_info "Service systemd configur√©"

# 12) D√©marrage du service
ynh_script_progression "D√©marrage du service..." 90 100

ynh_systemd_action --service_name="$APP_ID" --action=start
ynh_systemd_action --service_name="$APP_ID" --action=enable

ynh_log_info "Service d√©marr√© et activ√©"

# 13) Healthcheck HTTP local puis test URL publique
ynh_script_progression "Tests de sant√©..." 95 100

# Attendre que le service soit pr√™t
sleep 10

# Healthcheck local
ynh_log_info "Test de sant√© local..."
if ! curl -f "http://127.0.0.1:$APP_PORT/health" > /dev/null 2>&1; then
    ynh_log_error "Le service ne r√©pond pas sur le port local $APP_PORT"
    exit 1
fi

ynh_log_info "‚úÖ Service local op√©rationnel"

# Test via URL publique
ynh_log_info "Test de l'URL publique..."
PUBLIC_URL="https://$DOMAIN$PATH_URL"
if ! curl -f "$PUBLIC_URL" > /dev/null 2>&1; then
    ynh_log_warning "L'URL publique n'est pas encore accessible : $PUBLIC_URL"
else
    ynh_log_info "‚úÖ URL publique accessible : $PUBLIC_URL"
fi

# 14) Enregistrement des settings finaux
ynh_script_progression "Finalisation..." 98 100

# Enregistrement des param√®tres finaux
ynh_app_setting_set "$APP_ID" "app_name" "$APP_NAME"
ynh_app_setting_set "$APP_ID" "app_version" "$APP_VERSION"
ynh_app_setting_set "$APP_ID" "app_port" "$APP_PORT"
ynh_app_setting_set "$APP_ID" "db_name" "$DB_NAME"
ynh_app_setting_set "$APP_ID" "redis_db" "$REDIS_DB"
ynh_app_setting_set "$APP_ID" "public_url" "$PUBLIC_URL"
ynh_app_setting_set "$APP_ID" "install_date" "$(date -Iseconds)"

# Configuration du monitoring
ynh_add_monitoring_config "$APP_ID"

# Configuration des sauvegardes
ynh_add_backup_config "$APP_ID" "$APP_DATA_DIR,$APP_CONFIG_DIR"

# Finalisation
ynh_script_progression "Installation termin√©e !" 100 100

# Log de l'installation
ynh_log_info "Installation de $APP_NAME termin√©e avec succ√®s"

# Message de fin
echo ""
echo "üéâ $APP_NAME a √©t√© install√© avec succ√®s !"
echo ""
echo "üìä Informations d'installation :"
echo "   ‚Ä¢ Version : $APP_VERSION"
echo "   ‚Ä¢ Port : $APP_PORT"
echo "   ‚Ä¢ Base de donn√©es : $DB_NAME"
echo "   ‚Ä¢ Redis : $REDIS_DB"
echo ""
echo "üåê Acc√®s √† l'application :"
echo "   ‚Ä¢ URL publique : $PUBLIC_URL"
echo "   ‚Ä¢ Interface d'administration : $PUBLIC_URL/admin"
echo ""
echo "üìö Documentation :"
echo "   ‚Ä¢ Utilisateur : https://docs.affine.pro/user"
echo "   ‚Ä¢ Administrateur : https://docs.affine.pro/admin"
echo ""
echo "üîß Gestion :"
echo "   ‚Ä¢ Logs : $APP_LOG_DIR"
echo "   ‚Ä¢ Configuration : $APP_CONFIG_DIR"
echo "   ‚Ä¢ Donn√©es : $APP_DATA_DIR"
echo ""
echo "‚úÖ Installation termin√©e !"