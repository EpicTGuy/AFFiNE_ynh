#!/bin/bash
# Smoke test install script for AFFiNE YunoHost package (no upstream yet)
set -eu
source /usr/share/yunohost/helpers

ynh_abort_if_errors

app=$YNH_APP_INSTANCE_NAME

# 1) Récupérer réponses d'install
domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
if [ -z "${domain:-}" ]; then domain=$(ynh_read_manifest --manifest=manifest.toml --key=install.domain --default=""); fi
if [ -z "${path_url:-}" ]; then path_url=$(ynh_read_manifest --manifest=manifest.toml --key=install.path.default); fi

# 2) Créer l'utilisateur système et répertoires persistants
ynh_system_user_create --username=$app
install_dir=/var/www/$app
mkdir -p "$install_dir" "$install_dir/data" "$install_dir/config"
chown -R $app:$app "$install_dir"

# 3) Allouer un port interne et l'enregistrer
port=$(ynh_find_port --port=4090)
ynh_app_setting_set $app port $port

# 4) Installer Node LTS via helper
ynh_nodejs_install --package $app --nodejs_version lts

# 5) Déployer un mini serveur Node (smoke test)
cat > "$install_dir/server.js" <<'JS'
const http = require('http');
const PORT = process.env.PORT || 4090;
const server = http.createServer((req, res) => {
  res.setHeader('Content-Type','text/html; charset=utf-8');
  res.end(`<h1>AFFiNE — paquet YunoHost</h1><p>Smoke test OK.</p>`);
});
server.listen(PORT, '127.0.0.1', () => console.log('AFFiNE test listening on', PORT));
JS

cat > "$install_dir/.env" <<ENV
PORT=$port
ENV

chown -R $app:$app "$install_dir"
chmod 640 "$install_dir/.env"

# 6) NGINX
ynh_add_nginx_config --template="conf/nginx.conf" --domain="$domain" --path_url="$path_url" --port="$port"

# 7) Systemd
ynh_add_systemd_config --template="conf/systemd/affine.service" --service=$app

# 8) Démarrer le service
ynh_systemd_action --service_name="$app" --action=restart --log_path="systemd"

# 9) Healthcheck
ynh_script_progression --message="Healthcheck..." --time --weight=1
curl -fsS "http://127.0.0.1:${port}" >/dev/null

# 10) Permissions (public/privé gérées par SSOwat via init_main_permission)
ynh_script_progression --message="Install terminé." --time --last