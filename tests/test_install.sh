#!/bin/bash

# Test d'installation pour AFFiNE
# V√©rifie que l'installation se d√©roule correctement

set -e

# Chargement des helpers YunoHost
source /usr/share/yunohost/helpers

# Variables de test
APP_ID="affine"
TEST_DOMAIN="test.example.com"
TEST_PATH="/affine"
TEST_IS_PUBLIC="false"

# Fonction de nettoyage
cleanup() {
    ynh_log_info "Nettoyage des tests..."
    ynh_app_remove "$APP_ID" 2>/dev/null || true
    ynh_log_info "Nettoyage termin√©"
}

# Gestion des erreurs
trap cleanup EXIT

# Test 1: V√©rification des pr√©requis
ynh_log_info "Test 1: V√©rification des pr√©requis"
if ! command -v node &> /dev/null; then
    ynh_log_error "Node.js n'est pas install√©"
    exit 1
fi
if ! command -v nginx &> /dev/null; then
    ynh_log_error "NGINX n'est pas install√©"
    exit 1
fi
ynh_log_info "‚úÖ Pr√©requis valid√©s"

# Test 2: Installation de l'application
ynh_log_info "Test 2: Installation de l'application"
ynh_app_install "$APP_ID" --domain "$TEST_DOMAIN" --path "$TEST_PATH" --is_public "$TEST_IS_PUBLIC"
ynh_log_info "‚úÖ Installation r√©ussie"

# Test 3: V√©rification des services
ynh_log_info "Test 3: V√©rification des services"
if ! systemctl is-active --quiet "$APP_ID"; then
    ynh_log_error "Le service $APP_ID n'est pas actif"
    exit 1
fi
ynh_log_info "‚úÖ Service actif"

# Test 4: V√©rification des ports
ynh_log_info "Test 4: V√©rification des ports"
APP_PORT=$(ynh_app_setting_get "$APP_ID" "app_port")
if [ -z "$APP_PORT" ]; then
    ynh_log_error "Le port de l'application n'est pas d√©fini"
    exit 1
fi
if ! netstat -tlnp | grep -q ":$APP_PORT "; then
    ynh_log_error "L'application n'√©coute pas sur le port $APP_PORT"
    exit 1
fi
ynh_log_info "‚úÖ Port $APP_PORT actif"

# Test 5: V√©rification de la base de donn√©es
ynh_log_info "Test 5: V√©rification de la base de donn√©es"
DB_NAME=$(ynh_app_setting_get "$APP_ID" "db_name")
if [ -z "$DB_NAME" ]; then
    ynh_log_error "La base de donn√©es n'est pas d√©finie"
    exit 1
fi
if ! sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw "$DB_NAME"; then
    ynh_log_error "La base de donn√©es $DB_NAME n'existe pas"
    exit 1
fi
ynh_log_info "‚úÖ Base de donn√©es $DB_NAME cr√©√©e"

# Test 6: V√©rification de Redis
ynh_log_info "Test 6: V√©rification de Redis"
REDIS_DB=$(ynh_app_setting_get "$APP_ID" "redis_db")
if [ -z "$REDIS_DB" ]; then
    ynh_log_error "La base Redis n'est pas d√©finie"
    exit 1
fi
ynh_log_info "‚úÖ Redis configur√©"

# Test 7: V√©rification des r√©pertoires
ynh_log_info "Test 7: V√©rification des r√©pertoires"
APP_DIR=$(ynh_app_setting_get "$APP_ID" "app_dir")
if [ ! -d "$APP_DIR" ]; then
    ynh_log_error "Le r√©pertoire de l'application n'existe pas"
    exit 1
fi
if [ ! -d "$APP_DIR/data" ]; then
    ynh_log_error "Le r√©pertoire de donn√©es n'existe pas"
    exit 1
fi
if [ ! -d "$APP_DIR/config" ]; then
    ynh_log_error "Le r√©pertoire de configuration n'existe pas"
    exit 1
fi
ynh_log_info "‚úÖ R√©pertoires cr√©√©s"

# Test 8: V√©rification de la configuration NGINX
ynh_log_info "Test 8: V√©rification de la configuration NGINX"
if [ ! -f "/etc/nginx/conf.d/$TEST_DOMAIN.d/$APP_ID.conf" ]; then
    ynh_log_error "La configuration NGINX n'existe pas"
    exit 1
fi
ynh_log_info "‚úÖ Configuration NGINX cr√©√©e"

# Test 9: V√©rification de la configuration SSL
ynh_log_info "Test 9: V√©rification de la configuration SSL"
if [ ! -f "/etc/nginx/conf.d/$TEST_DOMAIN.d/ssl.conf" ]; then
    ynh_log_warning "La configuration SSL n'existe pas (normal en test)"
fi
ynh_log_info "‚úÖ Configuration SSL v√©rifi√©e"

# Test 10: V√©rification de la configuration SSOwat
ynh_log_info "Test 10: V√©rification de la configuration SSOwat"
if [ ! -f "/etc/ssowat/conf.d/$APP_ID.yml" ]; then
    ynh_log_error "La configuration SSOwat n'existe pas"
    exit 1
fi
ynh_log_info "‚úÖ Configuration SSOwat cr√©√©e"

# Test 11: V√©rification de la configuration systemd
ynh_log_info "Test 11: V√©rification de la configuration systemd"
if [ ! -f "/etc/systemd/system/$APP_ID.service" ]; then
    ynh_log_error "La configuration systemd n'existe pas"
    exit 1
fi
ynh_log_info "‚úÖ Configuration systemd cr√©√©e"

# Test 12: V√©rification des permissions
ynh_log_info "Test 12: V√©rification des permissions"
APP_USER=$(ynh_app_setting_get "$APP_ID" "app_user")
if [ -z "$APP_USER" ]; then
    ynh_log_error "L'utilisateur de l'application n'est pas d√©fini"
    exit 1
fi
if ! id "$APP_USER" &>/dev/null; then
    ynh_log_error "L'utilisateur $APP_USER n'existe pas"
    exit 1
fi
ynh_log_info "‚úÖ Utilisateur $APP_USER cr√©√©"

# Test 13: V√©rification des logs
ynh_log_info "Test 13: V√©rification des logs"
APP_LOG_DIR="/var/log/$APP_ID"
if [ ! -d "$APP_LOG_DIR" ]; then
    ynh_log_error "Le r√©pertoire de logs n'existe pas"
    exit 1
fi
ynh_log_info "‚úÖ R√©pertoire de logs cr√©√©"

# Test 14: V√©rification de la configuration de monitoring
ynh_log_info "Test 14: V√©rification de la configuration de monitoring"
if [ ! -f "/etc/yunohost/apps/$APP_ID/monitoring.conf" ]; then
    ynh_log_warning "La configuration de monitoring n'existe pas"
fi
ynh_log_info "‚úÖ Configuration de monitoring v√©rifi√©e"

# Test 15: V√©rification de la configuration de sauvegarde
ynh_log_info "Test 15: V√©rification de la configuration de sauvegarde"
if [ ! -f "/etc/yunohost/apps/$APP_ID/backup.conf" ]; then
    ynh_log_warning "La configuration de sauvegarde n'existe pas"
fi
ynh_log_info "‚úÖ Configuration de sauvegarde v√©rifi√©e"

# R√©sum√© des tests
ynh_log_info "üéâ Tous les tests d'installation ont r√©ussi !"
ynh_log_info "üìä R√©sum√© :"
ynh_log_info "   ‚Ä¢ Application install√©e : $APP_ID"
ynh_log_info "   ‚Ä¢ Port : $APP_PORT"
ynh_log_info "   ‚Ä¢ Base de donn√©es : $DB_NAME"
ynh_log_info "   ‚Ä¢ Redis : $REDIS_DB"
ynh_log_info "   ‚Ä¢ Utilisateur : $APP_USER"
ynh_log_info "   ‚Ä¢ R√©pertoire : $APP_DIR"
ynh_log_info "   ‚Ä¢ Logs : $APP_LOG_DIR"

exit 0
